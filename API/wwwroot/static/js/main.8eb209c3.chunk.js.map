{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextInput.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/profileBio.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","fbLogin","accessToken","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","editProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","date","description","category","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPredicate","value","resetPredicate","forEach","setPagingParams","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","fbAccessToken","fbLoading","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","exact","as","NavLink","to","header","src","alt","style","marginRight","name","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","width","marginTop","size","Header","color","attached","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","Segment","Group","Label","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","LoadingComponent","Dimmer","MyInputText","props","useField","field","meta","Form","Field","touched","label","MyTextArea","Input","MySelectInput","helpers","Select","clearable","options","event","setValue","onBlur","setTouched","placeholder","categoryOptions","MyDateInput","selected","useHistory","useParams","validationSchema","Yup","required","nullable","enableReinitialize","initialValues","onSubmit","uuid","handleFormSubmit","handleSubmit","isValid","isSubmitting","dirty","className","autoComplete","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","type","email","password","setErrors","render","ValidationErrors","Message","err","i","isLoggedIn","Divider","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","SegmentInline","message","Modal","onClose","panes","menuItem","pane","Tab","Pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","ProfileEditFrom","setEditMode","isCurrentUser","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.8eb209c3.chunk.js","sourcesContent":["export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  data: T;\r\n  pagination: Pagination;\r\n\r\n  constructor(data: T, pagination: Pagination) {\r\n    this.data = data;\r\n    this.pagination = pagination;\r\n  }\r\n}\r\n\r\nexport class PagingParams {\r\n  pageNumber = 1;\r\n  pageSize = 2;\r\n\r\n  constructor(pageNumber = 1, pageSize = 2) {\r\n    this.pageNumber = pageNumber;\r\n    this.pageSize = pageSize;\r\n  }\r\n}\r\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"../stores/store\";\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use((config) => {\r\n  const token = store.commonStore.token;\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  async (response) => {\r\n    if (process.env.NODE_ENV === \"development\") await sleep(1000);\r\n    const pagination = response.headers[\"pagination\"];\r\n    if (pagination) {\r\n      response.data = new PaginatedResult(\r\n        response.data,\r\n        JSON.parse(pagination)\r\n      );\r\n      return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, config } = error.response!;\r\n    switch (status) {\r\n      case 400:\r\n        if (typeof data === \"string\") {\r\n          toast.error(data);\r\n        }\r\n\r\n        if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\"))\r\n          history.push(\"/not-found\");\r\n\r\n        if (data.errors) {\r\n          const modalStateErrors = [];\r\n          for (const key in data.errors) {\r\n            if (data.errors[key]) modalStateErrors.push(data.errors[key]);\r\n          }\r\n          throw modalStateErrors.flat();\r\n        } else {\r\n          toast.error(data);\r\n        }\r\n        break;\r\n      case 401:\r\n        toast.error(\"Unauthorised!\");\r\n        break;\r\n      case 404:\r\n        history.push(\"/not-found\");\r\n        break;\r\n      case 500:\r\n        store.commonStore.setServerError(data);\r\n        history.push(\"/server-error\");\r\n        break;\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst request = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams) =>\r\n    axios\r\n      .get<PaginatedResult<Activity[]>>(\"/activities\", { params })\r\n      .then(responseBody),\r\n  details: (id: string) => request.get<Activity>(`/activities/${id}`),\r\n  create: (activity: ActivityFormValues) =>\r\n    request.post<void>(\"/activities\", activity),\r\n  update: (activity: ActivityFormValues) =>\r\n    request.put<void>(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => request.del<void>(`/activities/${id}`),\r\n  attend: (id: string) => request.post<void>(`/activities/${id}/attend`, {}),\r\n};\r\n\r\nconst Profiles = {\r\n  get: (username: string) => request.get<Profile>(`/profiles/${username}`),\r\n  uploadPhoto: (file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n    return axios.post<Photo>(\"photos\", formData, {\r\n      headers: { \"Content-type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n  setMainPhoto: (id: string) => request.post(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => request.del(`/photos/${id}`),\r\n  editProfile: (profile: Partial<Profile>) =>\r\n    request.put<void>(\"/profiles\", profile),\r\n  updateFollowing: (username: string) =>\r\n    request.post(`/follow/${username}`, {}),\r\n  listFollowings: (username: string, predicate: string) =>\r\n    request.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n  listActivities: (username: string, predicate: string) =>\r\n    request.get<UserActivity[]>(\r\n      `/profiles/${username}/activities?predicate=${predicate}`\r\n    ),\r\n};\r\n\r\nconst Account = {\r\n  current: () => request.get<User>(\"/account\"),\r\n  login: (user: UserFormValues) => request.post<User>(\"/account/login\", user),\r\n  register: (user: UserFormValues) =>\r\n    request.post<User>(\"/account/register\", user),\r\n  fbLogin: (accessToken: string) =>\r\n    request.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}),\r\n};\r\n\r\nconst agent = {\r\n  Activities,\r\n  Account,\r\n  Profiles,\r\n};\r\n\r\nexport default agent;\r\n","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n  id: string;\r\n  title: string;\r\n  date: Date | null;\r\n  description: string;\r\n  category: string;\r\n  city: string;\r\n  venue: string;\r\n  hostUsername: string;\r\n  isCancelled: boolean;\r\n  isGoing: boolean;\r\n  isHost: boolean;\r\n  host?: Profile;\r\n  attendees: Profile[];\r\n}\r\n\r\nexport class Activity implements Activity {\r\n  constructor(init?: ActivityFormValues) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n  id?: string = undefined;\r\n  title: string = \"\";\r\n  date: Date | null = null;\r\n  description: string = \"\";\r\n  category: string = \"\";\r\n  city: string = \"\";\r\n  venue: string = \"\";\r\n\r\n  constructor(activity?: ActivityFormValues) {\r\n    if (activity) {\r\n      this.id = activity.id;\r\n      this.title = activity.title;\r\n      this.date = activity.date;\r\n      this.description = activity.description;\r\n      this.category = activity.category;\r\n      this.city = activity.city;\r\n      this.venue = activity.venue;\r\n    }\r\n  }\r\n}\r\n","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n  username: string;\r\n  displayName: string;\r\n  image?: string;\r\n  bio?: string;\r\n  followersCount: number;\r\n  followingCount: number;\r\n  following: boolean;\r\n  photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n  constructor(user: User) {\r\n    this.username = user.username;\r\n    this.displayName = user.displayName;\r\n    this.image = user.image;\r\n  }\r\n}\r\n\r\nexport interface Photo {\r\n  id: string;\r\n  url: string;\r\n  isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n  id: string;\r\n  date: Date;\r\n  category: string;\r\n  title: string;\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { format } from \"date-fns\";\r\nimport { store } from \"./store\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\n\r\nexport default class ActivityStore {\r\n  activityRegistry = new Map<string, Activity>();\r\n  selectedActivity: Activity | undefined = undefined;\r\n  editMode = false;\r\n  loading = false;\r\n  loadingInitial = false;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  predicate = new Map().set(\"all\", true);\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        this.activityRegistry.clear();\r\n        this.loadActivities();\r\n      }\r\n    );\r\n  }\r\n\r\n  setPredicate = (predicate: string, value: Date | string) => {\r\n    const resetPredicate = () => {\r\n      this.predicate.forEach((value, key) => {\r\n        if (key !== \"startDate\") this.predicate.delete(key);\r\n      });\r\n    };\r\n\r\n    switch (predicate) {\r\n      case \"all\":\r\n        resetPredicate();\r\n        this.predicate.set(\"all\", true);\r\n        break;\r\n      case \"isGoing\":\r\n        resetPredicate();\r\n        this.predicate.set(\"isGoing\", true);\r\n        break;\r\n      case \"isHost\":\r\n        resetPredicate();\r\n        this.predicate.set(\"isHost\", true);\r\n        break;\r\n      case \"startDate\":\r\n        this.predicate.delete(\"startDate\");\r\n        this.predicate.set(\"startDate\", value);\r\n        break;\r\n    }\r\n  };\r\n\r\n  setPagingParams = (pagingParams: PagingParams) => {\r\n    this.pagingParams = pagingParams;\r\n  };\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\r\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\r\n    this.predicate.forEach((value, key) => {\r\n      if (key === \"startDate\") {\r\n        params.append(key, (value as Date).toISOString());\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    });\r\n    return params;\r\n  }\r\n\r\n  get activitiesByDate() {\r\n    return Array.from(this.activityRegistry.values()).sort(\r\n      (a, b) => a.date!.getTime() - b.date!.getTime()\r\n    );\r\n  }\r\n\r\n  get groupedActivities() {\r\n    return Object.entries(\r\n      this.activitiesByDate.reduce((activities, activity) => {\r\n        const date = format(activity.date!, \"dd MMM yyyy\");\r\n        activities[date] = activities[date]\r\n          ? [...activities[date], activity]\r\n          : [activity];\r\n        return activities;\r\n      }, {} as { [key: string]: Activity[] })\r\n    );\r\n  }\r\n\r\n  loadActivities = async () => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      const result = await agent.Activities.list(this.axiosParams);\r\n      result.data.forEach((activity) => {\r\n        this.setActivity(activity);\r\n      });\r\n      this.setPagination(result.pagination);\r\n      this.setLoadingInitial(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setLoadingInitial(false);\r\n    }\r\n  };\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  };\r\n\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n    if (activity) {\r\n      this.selectedActivity = activity;\r\n      return activity;\r\n    } else {\r\n      this.loadingInitial = true;\r\n      try {\r\n        activity = await agent.Activities.details(id);\r\n        this.setActivity(activity);\r\n        runInAction(() => {\r\n          this.selectedActivity = activity;\r\n        });\r\n        this.setLoadingInitial(false);\r\n        return activity;\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.setLoadingInitial(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  private getActivity = (id: string) => {\r\n    return this.activityRegistry.get(id);\r\n  };\r\n\r\n  private setActivity = (activity: Activity) => {\r\n    const user = store.userStore.user;\r\n    if (user) {\r\n      activity.isGoing = activity.attendees!.some(\r\n        (a) => a.username === user.username\r\n      );\r\n      activity.isHost = activity.hostUsername === user.username;\r\n      activity.host = activity.attendees?.find(\r\n        (x) => x.username === activity.hostUsername\r\n      );\r\n    }\r\n    activity.date = new Date(activity.date!);\r\n    this.activityRegistry.set(activity.id, activity);\r\n  };\r\n\r\n  setLoadingInitial = (state: boolean) => {\r\n    this.loadingInitial = state;\r\n  };\r\n\r\n  createActivity = async (activity: ActivityFormValues) => {\r\n    const user = store.userStore.user;\r\n    const attendee = new Profile(user!);\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const newActivity = new Activity(activity);\r\n      newActivity.hostUsername = user!.username;\r\n      newActivity.attendees = [attendee];\r\n      this.setActivity(newActivity);\r\n      runInAction(() => {\r\n        this.selectedActivity = newActivity;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  updateActivity = async (activity: ActivityFormValues) => {\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(() => {\r\n        if (activity.id) {\r\n          let updatedActivity = {\r\n            ...this.getActivity(activity.id),\r\n            ...activity,\r\n          };\r\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n          this.selectedActivity = updatedActivity as Activity;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(() => {\r\n        this.activityRegistry.delete(id);\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateAttendance = async () => {\r\n    const user = store.userStore.user;\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        if (this.selectedActivity?.isGoing) {\r\n          this.selectedActivity.attendees =\r\n            this.selectedActivity.attendees?.filter(\r\n              (a) => a.username !== user?.username\r\n            );\r\n          this.selectedActivity.isGoing = false;\r\n        } else {\r\n          const attendee = new Profile(user!);\r\n          this.selectedActivity?.attendees?.push(attendee);\r\n          this.selectedActivity!.isGoing = true;\r\n        }\r\n        this.activityRegistry.set(\r\n          this.selectedActivity!.id,\r\n          this.selectedActivity!\r\n        );\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  cancelActivityToggle = async () => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        this.selectedActivity!.isCancelled =\r\n          !this.selectedActivity?.isCancelled;\r\n        this.activityRegistry.set(\r\n          this.selectedActivity!.id,\r\n          this.selectedActivity!\r\n        );\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  clearSelectedActivity = () => {\r\n    this.selectedActivity = undefined;\r\n  };\r\n\r\n  updateAttendeeFollowing = (username: string) => {\r\n    this.activityRegistry.forEach((activity) => {\r\n      activity.attendees.forEach((attendee) => {\r\n        if (attendee.username === username) {\r\n          attendee.following\r\n            ? attendee.followersCount--\r\n            : attendee.followersCount++;\r\n          attendee.following = !attendee.following;\r\n        }\r\n      });\r\n    });\r\n  };\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loading = false;\r\n  followings: Profile[] = [];\r\n  loadingFollowings = false;\r\n  activeTab = 0;\r\n  userActivities: UserActivity[] = [];\r\n  loadingActivities = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n    reaction(\r\n      () => this.activeTab,\r\n      (activeTab) => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 4 ? \"following\" : \"followers\";\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  };\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.username === this.profile.username;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingProfile = false));\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.uploading = false));\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\r\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos = this.profile.photos?.filter(\r\n            (p) => p.id !== photo.id\r\n          );\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  editProfile = async (profile: Partial<Profile>) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.editProfile(profile);\r\n      runInAction(() => {\r\n        if (\r\n          profile.displayName &&\r\n          profile.displayName !== store.userStore.user?.displayName\r\n        ) {\r\n          store.userStore.setDisplayName(profile.displayName);\r\n        }\r\n        this.profile = { ...this.profile, ...(profile as Profile) };\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateFollowing(username);\r\n      store.activityStore.updateAttendeeFollowing(username);\r\n      runInAction(() => {\r\n        if (\r\n          this.profile &&\r\n          this.profile.username !== store.userStore.user?.username &&\r\n          this.profile.username === username\r\n        ) {\r\n          following\r\n            ? this.profile.followersCount++\r\n            : this.profile.followersCount--;\r\n          this.profile.following = !this.profile.following;\r\n        }\r\n        if (\r\n          this.profile &&\r\n          this.profile.username === store.userStore.user?.username\r\n        ) {\r\n          following\r\n            ? this.profile.followingCount++\r\n            : this.profile.followingCount--;\r\n        }\r\n        this.followings.forEach((profile) => {\r\n          if (profile.username === username) {\r\n            profile.following\r\n              ? profile.followersCount--\r\n              : profile.followersCount++;\r\n            profile.following = !profile.following;\r\n          }\r\n        });\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: string) => {\r\n    this.loadingFollowings = true;\r\n    try {\r\n      const followings = await agent.Profiles.listFollowings(\r\n        this.profile!.username,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n        this.followings = followings;\r\n        this.loadingFollowings = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingFollowings = false));\r\n    }\r\n  };\r\n\r\n  loadUserActivities = async (username: string, predicate?: string) => {\r\n    this.loadingActivities = true;\r\n    try {\r\n      const activities = await agent.Profiles.listActivities(\r\n        username,\r\n        predicate!\r\n      );\r\n      runInAction(() => {\r\n        this.userActivities = activities;\r\n        this.loadingActivities = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingActivities = false));\r\n    }\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n  fbAccessToken: string | null = null;\r\n  fbLoading = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  login = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      history.push(\"/activities\");\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    window.localStorage.removeItem(\"jwt\");\r\n    this.user = null;\r\n    history.push(\"/\");\r\n  };\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.current();\r\n      runInAction(() => (this.user = user));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  register = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.register(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      history.push(\"/activities\");\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  setImage = (image: string) => {\r\n    if (this.user) this.user.image = image;\r\n  };\r\n\r\n  setDisplayName = (displayName: string) => {\r\n    if (this.user) this.user.displayName = displayName;\r\n  };\r\n\r\n  getFacebookLoginStatus = async () => {\r\n    window.FB.getLoginStatus((response) => {\r\n      if (response.status === \"connected\") {\r\n        this.fbAccessToken = response.authResponse.accessToken;\r\n      }\r\n    });\r\n  };\r\n\r\n  facebookLogin = () => {\r\n    this.fbLoading = true;\r\n    const apiLogin = (accessToken: string) => {\r\n      agent.Account.fbLogin(accessToken)\r\n        .then((user) => {\r\n          store.commonStore.setToken(user.token);\r\n          runInAction(() => {\r\n            this.user = user;\r\n            this.fbLoading = false;\r\n          });\r\n          history.push(\"/activities\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          runInAction(() => (this.fbLoading = false));\r\n        });\r\n    };\r\n    if (this.fbAccessToken) {\r\n      apiLogin(this.fbAccessToken);\r\n    } else {\r\n      window.FB.login(\r\n        (response) => {\r\n          apiLogin(response.authResponse.accessToken);\r\n        },\r\n        { scope: \"public_profile,email\" }\r\n      );\r\n    }\r\n  };\r\n}\r\n","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n  activityStore: ActivityStore;\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  modalStore: ModalStore;\r\n  profileStore: ProfileStore;\r\n  commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  activityStore: new ActivityStore(),\r\n  commonStore: new CommonStore(),\r\n  userStore: new UserStore(),\r\n  modalStore: new ModalStore(),\r\n  profileStore: new ProfileStore(),\r\n  commentStore: new CommentStore(),\r\n};\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n  return useContext(StoreContext);\r\n}\r\n","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/ServerError\";\r\n\r\nexport default class CommonStore {\r\n  error: ServerError | null = null;\r\n  token: string | null = window.localStorage.getItem(\"jwt\");\r\n  appLoaded = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.token,\r\n      (token) => {\r\n        if (token) {\r\n          window.localStorage.setItem(\"jwt\", token);\r\n        } else {\r\n          window.localStorage.removeItem(\"jwt\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setServerError = (error: ServerError) => {\r\n    this.error = error;\r\n  };\r\n\r\n  setToken = (token: string | null) => {\r\n    this.token = token;\r\n  };\r\n\r\n  setAppLoaded = () => {\r\n    this.appLoaded = true;\r\n  };\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\ninterface Modal {\r\n  open: boolean;\r\n  body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n  modal: Modal = {\r\n    open: false,\r\n    body: null,\r\n  };\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  openModal = (content: JSX.Element) => {\r\n    this.modal.open = true;\r\n    this.modal.body = content;\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n  };\r\n}\r\n","import {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  LogLevel,\r\n} from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n  comments: ChatComment[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = (activityId: string) => {\r\n    if (store.activityStore.selectedActivity) {\r\n      this.hubConnection = new HubConnectionBuilder()\r\n        .withUrl(process.env.REACT_APP_CHAT_URL + \"?activityId=\" + activityId, {\r\n          accessTokenFactory: () => store.userStore.user?.token!,\r\n        })\r\n        .withAutomaticReconnect()\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n\r\n      this.hubConnection\r\n        .start()\r\n        .catch((error) =>\r\n          console.log(\"Error establishing connection: \", error)\r\n        );\r\n\r\n      this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\r\n        runInAction(() => {\r\n          comments.forEach((comment) => {\r\n            comment.createdAt = new Date(comment.createdAt + \"Z\");\r\n          });\r\n          this.comments = comments;\r\n        });\r\n      });\r\n\r\n      this.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\r\n        runInAction(() => {\r\n          comment.createdAt = new Date(comment.createdAt);\r\n          this.comments.unshift(comment);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  stopHubConnection = () => {\r\n    this.hubConnection\r\n      ?.stop()\r\n      .catch((error) => console.log(\"Error stopping connection: \" + error));\r\n  };\r\n\r\n  clearComments = () => {\r\n    this.comments = [];\r\n    this.stopHubConnection();\r\n  };\r\n\r\n  addComment = async (values: any) => {\r\n    values.activityId = store.activityStore.selectedActivity?.id;\r\n    try {\r\n      await this.hubConnection?.invoke(\"SendComment\", values);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Dropdown, Image, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default observer(function NavBar() {\r\n  const {\r\n    userStore: { user, logout },\r\n  } = useStore();\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item exact as={NavLink} to=\"/\" header>\r\n          <img src=\"/assets/logo.png\" alt=\"logo\" style={{ marginRight: 10 }} />\r\n          Reactivities\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to={\"/activities\"} name=\"Activities\" />\r\n        <Menu.Item as={NavLink} to={\"/errors\"} name=\"Errors\" />\r\n        <Menu.Item>\r\n          <Button\r\n            positive\r\n            content=\"Create Activity\"\r\n            as={NavLink}\r\n            to=\"/createActivity\"\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item position=\"right\">\r\n          <Image src={user?.image || \"assets/user.png\"} avatar spaced=\"right\" />\r\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                as={Link}\r\n                to={`/profiles/${user?.username}`}\r\n                text=\"My Profile\"\r\n                icon=\"user\"\r\n              />\r\n              <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function ActivityFilters() {\r\n  const {\r\n    activityStore: { predicate, setPredicate },\r\n  } = useStore();\r\n  return (\r\n    <>\r\n      <Menu vertical style={{ width: \"100%\", marginTop: 25 }} size=\"large\">\r\n        <Header icon=\"filter\" color=\"teal\" attached content=\"Filters\" />\r\n        <Menu.Item\r\n          content=\"All activities\"\r\n          active={predicate.has(\"all\")}\r\n          onClick={() => setPredicate(\"all\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm going\"\r\n          active={predicate.has(\"isGoing\")}\r\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm hosting\"\r\n          active={predicate.has(\"isHost\")}\r\n          onClick={() => setPredicate(\"isHost\", \"true\")}\r\n        />\r\n      </Menu>\r\n      <Header />\r\n      <Calendar\r\n        onChange={(date: Date) => setPredicate(\"startDate\", date)}\r\n        value={predicate.get(\"startDate\" || new Date())}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n  const { profileStore, userStore } = useStore();\r\n  const { updateFollowing, loading } = profileStore;\r\n\r\n  function handleFollow(e: SyntheticEvent, username: string) {\r\n    e.preventDefault();\r\n    profile.following\r\n      ? updateFollowing(username, false)\r\n      : updateFollowing(username, true);\r\n  }\r\n\r\n  if (userStore.user?.username === profile.username) return null;\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          color=\"teal\"\r\n          content={profile.following ? \"Following\" : \"Not following\"}\r\n        />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          basic\r\n          color={profile.following ? \"red\" : \"green\"}\r\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n          loading={loading}\r\n          onClick={(e) => handleFollow(e, profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({ profile }: Props) {\r\n  function truncate(str: string | undefined) {\r\n    if (str) {\r\n      return str.length > 40 ? str.substring(0, 37) + \"...\" : str;\r\n    }\r\n  }\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || \"/assets/user.png\"} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\">{profile.followersCount} followers</Icon>\r\n      </Card.Content>\r\n      <FollowButton profile={profile} />\r\n    </Card>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Image, List, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport ProfileCard from \"../../profiles/ProfileCard\";\r\n\r\ninterface Props {\r\n  attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({\r\n  attendees,\r\n}: Props) {\r\n  const styles = {\r\n    borderColor: \"orange\",\r\n    borderWidth: 3,\r\n  };\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map((attendee) => (\r\n        <Popup\r\n          hoverable\r\n          key={attendee.username}\r\n          trigger={\r\n            <List.Item\r\n              key={attendee.username}\r\n              as={Link}\r\n              to={`/profiles/${attendee.username}`}\r\n            >\r\n              <Image\r\n                size=\"mini\"\r\n                circular\r\n                src={attendee.image || \"/assets/user.png\"}\r\n                bordered\r\n                style={attendee.following ? styles : null}\r\n              />\r\n            </List.Item>\r\n          }\r\n        >\r\n          <Popup.Content>\r\n            <ProfileCard profile={attendee} />\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { format } from \"date-fns\";\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityListItem({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            attached=\"top\"\r\n            content=\"Cancelled\"\r\n            color=\"red\"\r\n            style={{ textAlign: \"center\" }}\r\n          />\r\n        )}\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image\r\n              style={{ marginBottom: 3 }}\r\n              size=\"tiny\"\r\n              circular\r\n              src={activity.host?.image || \"/assets/user.png\"}\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                Hosted by{\" \"}\r\n                <Link to={`/profiles/${activity.hostUsername}`}>\r\n                  {activity.host?.displayName}\r\n                </Link>\r\n              </Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"orange\">\r\n                    You are hosting this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label color=\"green\" basic>\r\n                    You are going to this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name=\"clock\" /> {format(activity.date!, \"dd MMM yyyy h:mm aa\")}\r\n          <Icon name=\"marker\" /> {activity.venue}\r\n        </span>\r\n      </Segment>\r\n      <Segment secondary>\r\n        <ActivityListItemAttendee attendees={activity.attendees!} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          color=\"teal\"\r\n          floated=\"right\"\r\n          content=\"View\"\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nexport default observer(function ActivityList() {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color=\"teal\">\r\n            {group}\r\n          </Header>\r\n          {activities.map((activity) => (\r\n            <ActivityListItem key={activity.id} activity={activity} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import React, { Fragment } from \"react\";\r\nimport { Segment, Button, Placeholder } from \"semantic-ui-react\";\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{ marginTop: 25 }}>\r\n        <Segment.Group>\r\n          <Segment style={{ minHeight: 110 }}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment secondary style={{ minHeight: 70 }} />\r\n          <Segment clearing>\r\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\nexport default observer(function ActivityDashboard() {\r\n  const { activityStore } = useStore();\r\n  const { loadActivities, activityRegistry, setPagingParams, pagination } =\r\n    activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activityRegistry.size <= 1) loadActivities();\r\n  }, [activityRegistry.size, loadActivities]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        {activityStore.loadingInitial && !loadingNext ? (\r\n          <>\r\n            <ActivityListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={\r\n              !loadingNext &&\r\n              !!pagination &&\r\n              pagination.currentPage < pagination.totalPages\r\n            }\r\n            initialLoad={false}\r\n          >\r\n            <ActivityList />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  inverted?: boolean;\r\n  content?: string;\r\n}\r\n\r\nexport default function LoadingComponent({\r\n  inverted = true,\r\n  content = \"Loading...\",\r\n}: Props) {\r\n  return (\r\n    <Dimmer active={true} inverted={inverted}>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  name: string;\r\n  placeholder: string;\r\n  label?: string;\r\n  type?: string;\r\n  autoComplete?: string;\r\n}\r\n\r\nexport default function MyInputText(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  name: string;\r\n  placeholder: string;\r\n  label?: string;\r\n  rows: number;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Input error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Input>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  name: string;\r\n  placeholder: string;\r\n  label?: string;\r\n  options: any;\r\n}\r\n\r\nexport default function MySelectInput(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(event, data) => helpers.setValue(data.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","export const categoryOptions = [\r\n  { text: \"Drinks\", value: \"drinks\" },\r\n  { text: \"Culture\", value: \"culture\" },\r\n  { text: \"Film\", value: \"film\" },\r\n  { text: \"Food\", value: \"food\" },\r\n  { text: \"Music\", value: \"music\" },\r\n  { text: \"Travel\", value: \"travel\" },\r\n];\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\r\n\r\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={(value) => helpers.setValue(value)}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MyInputText from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\r\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\r\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\r\nimport { ActivityFormValues } from \"../../../app/models/activity\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nexport default observer(function ActivityForm() {\r\n  const history = useHistory();\r\n  const { activityStore } = useStore();\r\n  const { createActivity, updateActivity, loadActivity, loadingInitial } =\r\n    activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n  const [activity, setActivity] = useState<ActivityFormValues>(\r\n    new ActivityFormValues()\r\n  );\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required(\"The activity title is required!\"),\r\n    description: Yup.string().required(\"The activity description is required!\"),\r\n    date: Yup.string().required(\"The activity date is required!\").nullable(),\r\n    category: Yup.string().required(\"The activity category is required!\"),\r\n    city: Yup.string().required(\"The activity city is required!\"),\r\n    venue: Yup.string().required(\"The activity venue is required!\"),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id)\r\n      loadActivity(id).then((activity) =>\r\n        setActivity(new ActivityFormValues(activity))\r\n      );\r\n  }, [id, loadActivity]);\r\n\r\n  function handleFormSubmit(activity: ActivityFormValues) {\r\n    if (!activity.id) {\r\n      let newActivity = { ...activity, id: uuid() };\r\n      createActivity(newActivity).then(() =>\r\n        history.push(`/activities/${newActivity.id}`)\r\n      );\r\n    } else {\r\n      updateActivity(activity).then(() =>\r\n        history.push(`/activities/${activity.id}`)\r\n      );\r\n    }\r\n  }\r\n\r\n  if (loadingInitial) return <LoadingComponent content=\"Loading activity...\" />;\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content=\"Activity form\" sub color=\"teal\" />\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        enableReinitialize\r\n        initialValues={activity}\r\n        onSubmit={(values) => handleFormSubmit(values)}\r\n      >\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <MyInputText name=\"title\" placeholder=\"Title\" />\r\n            <MyTextArea placeholder=\"Description\" name=\"description\" rows={3} />\r\n            <MySelectInput\r\n              placeholder=\"Category\"\r\n              name=\"category\"\r\n              options={categoryOptions}\r\n            />\r\n            <MyDateInput\r\n              placeholderText=\"Date\"\r\n              name=\"date\"\r\n              showTimeSelect\r\n              timeCaption=\"time\"\r\n              dateFormat=\"MMMM d,yyyy h:mm aa\"\r\n            />\r\n            <Header content=\"Location details\" sub color=\"teal\" />\r\n            <MyInputText placeholder=\"City\" name=\"city\" />\r\n            <MyInputText placeholder=\"Venue\" name=\"venue\" />\r\n            <Button\r\n              floated=\"right\"\r\n              positive\r\n              type=\"submit\"\r\n              content=\"Submit\"\r\n              loading={isSubmitting}\r\n              disabled={isSubmitting || !dirty || !isValid}\r\n            />\r\n            <Button\r\n              as={Link}\r\n              to=\"/activities\"\r\n              floated=\"right\"\r\n              type=\"button\"\r\n              content=\"Cancel\"\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n});\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport MyInputText from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function LoginForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\", error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore\r\n          .login(values)\r\n          .catch((error) => setErrors({ error: \"Invalid Email or Password\" }))\r\n      }\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Login to Activities\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyInputText name=\"email\" placeholder=\"Email\" />\r\n          <MyInputText name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => (\r\n              <Label\r\n                style={{ marginBottom: 10 }}\r\n                color=\"red\"\r\n                basic\r\n                content={errors.error}\r\n              />\r\n            )}\r\n          />\r\n          <Button\r\n            loading={isSubmitting}\r\n            type=\"submit\"\r\n            fluid\r\n            content=\"Login\"\r\n            positive\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: Props) {\r\n  return (\r\n    <Message error>\r\n      {errors && (\r\n        <Message.List>\r\n          {errors.map((err: any, i: any) => (\r\n            <Message.Item key={i}>{err}</Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      )}\r\n    </Message>\r\n  );\r\n}\r\n","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header } from \"semantic-ui-react\";\r\nimport MyInputText from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport ValidationErrors from \"../errors/ValidationErrors\";\r\n\r\nexport default observer(function RegisterForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        displayName: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore.register(values).catch((error) => setErrors({ error }))\r\n      }\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n        username: Yup.string().required(),\r\n        email: Yup.string().required().email(),\r\n        password: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form\r\n          className=\"ui form error\"\r\n          onSubmit={handleSubmit}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Sign up to Activities\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyInputText name=\"displayName\" placeholder=\"Display Name\" />\r\n          <MyInputText name=\"username\" placeholder=\"Username\" />\r\n          <MyInputText name=\"email\" placeholder=\"Email\" />\r\n          <MyInputText\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            autoComplete=\"off\"\r\n          />\r\n          <ValidationErrors errors={errors.error} />\r\n          <Button\r\n            disabled={!dirty || !isValid || isSubmitting}\r\n            loading={isSubmitting}\r\n            type=\"submit\"\r\n            fluid\r\n            content=\"Register\"\r\n            positive\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Header,\r\n  Image,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\nexport default observer(function HomePage() {\r\n  const { userStore, modalStore } = useStore();\r\n  return (\r\n    <Segment vertical inverted textAlign=\"center\" className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Image\r\n            size=\"massive\"\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginBottom: 12 }}\r\n          />\r\n          Reactivities\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Go to Activities!\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<LoginForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Login!\r\n            </Button>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<RegisterForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Register!\r\n            </Button>\r\n            <Divider horizontal inverted>\r\n              Or\r\n            </Divider>\r\n            <Button\r\n              loading={userStore.fbLoading}\r\n              color=\"facebook\"\r\n              size=\"huge\"\r\n              inverted\r\n              content=\"Login with Facebook\"\r\n              onClick={userStore.facebookLogin}\r\n            />\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n});\r\n","import { Formik, Form, Field, FieldProps } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\n\r\ninterface Props {\r\n  activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n  const { commentStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      commentStore.createHubConnection(activityId);\r\n    }\r\n    return () => {\r\n      commentStore.clearComments();\r\n    };\r\n  }, [activityId, commentStore]);\r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached clearing>\r\n        <Formik\r\n          onSubmit={(values, { resetForm }) =>\r\n            commentStore.addComment(values).then(() => resetForm())\r\n          }\r\n          initialValues={{ body: \"\" }}\r\n          validationSchema={Yup.object({ body: Yup.string().required() })}\r\n        >\r\n          {({ isSubmitting, isValid, handleSubmit }) => (\r\n            <Form className=\"ui form\">\r\n              <Field name=\"body\">\r\n                {(props: FieldProps) => (\r\n                  <div style={{ position: \"relative\" }}>\r\n                    <Loader active={isSubmitting} />\r\n                    <textarea\r\n                      placeholder=\"Enter your comment (Enter to submit, Shift + Enter for new line)\"\r\n                      rows={2}\r\n                      {...props.field}\r\n                      onKeyPress={(e) => {\r\n                        if (e.key === \"Enter\" && e.shiftKey) {\r\n                          return;\r\n                        }\r\n                        if (e.key === \"Enter\" && !e.shiftKey) {\r\n                          e.preventDefault();\r\n                          isValid && handleSubmit();\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Comment.Group>\r\n          {commentStore.comments.map((comment) => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n              <Comment.Content>\r\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\r\n                  {comment.displayName}\r\n                </Comment.Author>\r\n                <Comment.Metadata>\r\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>\r\n                  {comment.body}\r\n                </Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { format } from \"date-fns\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(30%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n  const {\r\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\r\n  } = useStore();\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\r\n            ribbon\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n          />\r\n        )}\r\n        <Image\r\n          src={`/assets/categoryImages/${activity.category}.jpg`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment style={activityImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={activity.title}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p>{format(activity.date!, \"dd MMM yyyy\")}</p>\r\n                <p>\r\n                  Hosted by{\" \"}\r\n                  <strong>\r\n                    <Link to={`/profiles/${activity.host?.username}`}>\r\n                      {activity.host?.displayName}\r\n                    </Link>\r\n                  </strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <>\r\n            <Button\r\n              basic\r\n              color={activity.isCancelled ? \"green\" : \"red\"}\r\n              floated=\"left\"\r\n              content={\r\n                activity.isCancelled\r\n                  ? \"Re-activate Activity\"\r\n                  : \"Cancel Activity\"\r\n              }\r\n              onClick={cancelActivityToggle}\r\n              loading={loading}\r\n            />\r\n            <Button\r\n              disabled={activity.isCancelled}\r\n              as={Link}\r\n              to={`/manage/${activity.id}`}\r\n              color=\"orange\"\r\n              floated=\"right\"\r\n            >\r\n              Manage Event\r\n            </Button>\r\n          </>\r\n        ) : activity.isGoing ? (\r\n          <Button onClick={updateAttendance} loading={loading}>\r\n            Cancel attendance\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            disabled={activity.isCancelled}\r\n            onClick={updateAttendance}\r\n            loading={loading}\r\n            color=\"teal\"\r\n          >\r\n            Join Activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { format } from \"date-fns\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>{format(activity.date!, \"dd MMM yyyy h:mm aa\")}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({\r\n  activity: { attendees, host },\r\n}: Props) {\r\n  if (!attendees) return null;\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: \"none\" }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\"\r\n      >\r\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map((attendee) => (\r\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\r\n              {attendee.username === host?.username && (\r\n                <Label\r\n                  style={{ position: \"absolute\" }}\r\n                  color=\"orange\"\r\n                  ribbon=\"right\"\r\n                >\r\n                  Host\r\n                </Label>\r\n              )}\r\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={`/profiles/${attendee.username}`}>\r\n                    {attendee.displayName}\r\n                  </Link>\r\n                </Item.Header>\r\n                {attendee.following && (\r\n                  <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>\r\n                )}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity: activity,\r\n    loadActivity,\r\n    loadingInitial,\r\n    clearSelectedActivity,\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n    return () => clearSelectedActivity();\r\n  }, [id, loadActivity, clearSelectedActivity]);\r\n\r\n  if (loadingInitial || !activity) return <LoadingComponent />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity} />\r\n        <ActivityDetailedInfo activity={activity} />\r\n        <ActivityDetailedChat activityId={activity.id} />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSidebar activity={activity} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport ValidationErrors from \"./ValidationErrors\";\r\n\r\nexport default function TestErrors() {\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  function handleNotFound() {\r\n    axios\r\n      .get(baseUrl + \"buggy/not-found\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadRequest() {\r\n    axios\r\n      .get(baseUrl + \"buggy/bad-request\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleServerError() {\r\n    axios\r\n      .get(baseUrl + \"buggy/server-error\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleUnauthorised() {\r\n    axios\r\n      .get(baseUrl + \"buggy/unauthorised\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadGuid() {\r\n    axios.get(baseUrl + \"activities/notaguid\").catch((err) => console.log(err));\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h1\" content=\"Test Error component\" />\r\n      <Segment>\r\n        <Button.Group widths=\"7\">\r\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\r\n          <Button\r\n            onClick={handleBadRequest}\r\n            content=\"Bad Request\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleValidationError}\r\n            content=\"Validation Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleServerError}\r\n            content=\"Server Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleUnauthorised}\r\n            content=\"Unauthorised\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\r\n        </Button.Group>\r\n      </Segment>\r\n      {errors && <ValidationErrors errors={errors} />}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Header,\r\n  Icon,\r\n  Segment,\r\n  SegmentInline,\r\n} from \"semantic-ui-react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        Oops - We looked everywhere and could not find anything!\r\n      </Header>\r\n      <SegmentInline>\r\n        <Button as={Link} to=\"/activities\" primary>\r\n          Return to Activities page\r\n        </Button>\r\n      </SegmentInline>\r\n    </Segment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function ServerError() {\r\n  const { commonStore } = useStore();\r\n  return (\r\n    <Container>\r\n      <Header as=\"h1\" content=\"Server Error\" />\r\n      <Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\r\n      {commonStore.error?.details && (\r\n        <Segment>\r\n          <Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\r\n          <code style={{ marginTop: \"10px\" }}>{commonStore.error.details}</code>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\nexport default observer(function ModalContainer() {\r\n  const { modalStore } = useStore();\r\n  return (\r\n    <Modal\r\n      open={modalStore.modal.open}\r\n      onClose={modalStore.closeModal}\r\n      size=\"mini\"\r\n    >\r\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\r\n    </Modal>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Grid, Header, Image, Tab, TabProps } from \"semantic-ui-react\";\r\nimport { UserActivity } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nconst panes = [\r\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\r\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\r\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\r\n];\r\n\r\nexport default observer(function ProfileActivities() {\r\n  const { profileStore } = useStore();\r\n  const { userActivities, profile, loadUserActivities, loadingActivities } =\r\n    profileStore;\r\n\r\n  useEffect(() => {\r\n    loadUserActivities(profile!.username);\r\n  }, [loadUserActivities, profile]);\r\n\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadUserActivities(\r\n      profile!.username,\r\n      panes[data.activeIndex as number].pane.key\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={15}>\r\n          <Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivities.map((activity: UserActivity) => (\r\n              <Card\r\n                key={activity.id}\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n              >\r\n                <Image\r\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\r\n                  <Card.Meta textAlign=\"center\">\r\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\r\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\nimport MyInputText from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default function ProfileEditFrom({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { profile, editProfile },\r\n  } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n      enableReinitialize\r\n      onSubmit={(values) => editProfile(values).then(() => setEditMode(false))}\r\n      validationSchema={Yup.object({ displayName: Yup.string().required() })}\r\n    >\r\n      {({ isValid, dirty, isSubmitting }) => (\r\n        <Form className=\"ui form\" autoComplete=\"off\">\r\n          <MyInputText name=\"displayName\" placeholder=\"DisplayName\" />\r\n          <MyTextArea name=\"bio\" placeholder=\"Bio\" rows={3} />\r\n          <Button\r\n            type=\"submit\"\r\n            content=\"Update profile\"\r\n            floated=\"right\"\r\n            positive\r\n            disabled={!dirty || !isValid}\r\n            loading={isSubmitting}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useState } from \"react\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileEditFrom from \"./ProfileEditForm\";\r\n\r\nexport default observer(function ProfileBio() {\r\n  const {\r\n    profileStore: { isCurrentUser, profile },\r\n  } = useStore();\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={`About ${profile?.displayName}`}\r\n          />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              color=\"grey\"\r\n              content={editMode ? \"Cancel\" : \"Edit Photo\"}\r\n              onClick={() => setEditMode(!editMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {editMode ? (\r\n            <ProfileEditFrom setEditMode={setEditMode} />\r\n          ) : (\r\n            <span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nexport default observer(function ProfileFollowings() {\r\n  const {\r\n    profileStore: { profile, followings, loadingFollowings, activeTab },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingFollowings}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={\r\n              activeTab === 3\r\n                ? `People following ${profile?.displayName}`\r\n                : `People ${profile?.displayName} is following`\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={4}>\r\n            {followings.map((profile) => (\r\n              <ProfileCard key={profile.username} profile={profile} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport Cropper from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({\r\n  imagePreview,\r\n  setCropper,\r\n}: Props) {\r\n  return (\r\n    <Cropper\r\n      src={imagePreview}\r\n      style={{ height: 200, width: \"100%\" }}\r\n      initialAspectRatio={1}\r\n      aspectRatio={1}\r\n      preview=\".img-preview\"\r\n      guides={false}\r\n      viewMode={1}\r\n      autoCropArea={1}\r\n      background={false}\r\n      onInitialized={(cropper) => setCropper(cropper)}\r\n    />\r\n  );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\r\n  const dzStyles = {\r\n    border: \"dashed 3px #eee\",\r\n    borderColor: \"#eee\",\r\n    borderRadius: \"5px\",\r\n    paddingTop: \"30px\",\r\n    textAlign: \"center\" as \"center\",\r\n    height: 200,\r\n  };\r\n\r\n  const dzActive = {\r\n    borderColor: \"green\",\r\n  };\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file: any) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [setFiles]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\r\n    >\r\n      <input {...getInputProps()} />\r\n      <Icon size=\"huge\" name=\"upload\" />\r\n      <Header content=\"Drop Image here\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\nimport Cropper from \"react-cropper\";\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({ loading, uploadPhoto }: Props) {\r\n  const [files, setFiles] = useState<any>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n    };\r\n  }, [files]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\r\n        <PhotoWidgetDropzone setFiles={setFiles} />\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\r\n        {files && files.length > 0 && (\r\n          <PhotoWidgetCropper\r\n            setCropper={setCropper}\r\n            imagePreview={files[0].preview}\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & Upload\" />\r\n        {files && files.length > 0 && (\r\n          <>\r\n            <div\r\n              className=\"img-preview\"\r\n              style={{ minHeight: 200, overflow: \"hidden\" }}\r\n            />\r\n            <Button.Group widths={2}>\r\n              <Button\r\n                loading={loading}\r\n                onClick={onCrop}\r\n                positive\r\n                icon=\"check\"\r\n              />\r\n              <Button\r\n                disabled={loading}\r\n                onClick={() => setFiles([])}\r\n                icon=\"close\"\r\n              />\r\n            </Button.Group>\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Button, Card, Grid, Header, Image, Tab } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n  const {\r\n    profileStore: {\r\n      isCurrentUser,\r\n      uploadPhoto,\r\n      uploading,\r\n      loading,\r\n      setMainPhoto,\r\n      deletePhoto,\r\n    },\r\n  } = useStore();\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState(\"\");\r\n\r\n  function handleUploadPhoto(file: Blob) {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  }\r\n\r\n  function handleSetMainPhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  }\r\n\r\n  function handleDeletePhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    deletePhoto(photo);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              uploadPhoto={handleUploadPhoto}\r\n              loading={uploading}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map((photo) => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url} />\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2}>\r\n                      <Button\r\n                        color=\"green\"\r\n                        basic\r\n                        content=\"Main\"\r\n                        name={\"main\" + photo.id}\r\n                        disabled={photo.isMain}\r\n                        loading={target === \"main\" + photo.id && loading}\r\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\r\n                      />\r\n                      <Button\r\n                        loading={target === photo.id && loading}\r\n                        onClick={(e) => handleDeletePhoto(photo, e)}\r\n                        disabled={photo.isMain}\r\n                        name={photo.id}\r\n                        color=\"red\"\r\n                        icon=\"trash\"\r\n                        basic\r\n                      />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileActivities from \"./ProfileActivities\";\r\nimport ProfileBio from \"./profileBio\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n  const { profileStore } = useStore();\r\n  const panes = [\r\n    { menuItem: \"About\", render: () => <ProfileBio /> },\r\n    { menuItem: \"Photos\", render: () => <ProfilePhotos profile={profile} /> },\r\n    { menuItem: \"Events\", render: () => <ProfileActivities /> },\r\n    {\r\n      menuItem: \"Followers\",\r\n      render: () => <ProfileFollowings />,\r\n    },\r\n    {\r\n      menuItem: \"Following\",\r\n      render: () => <ProfileFollowings />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Item,\r\n  Segment,\r\n  Statistic,\r\n} from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({ profile }: Props) {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size=\"small\"\r\n                src={profile.image || \"/assets/user.png\"}\r\n              ></Item.Image>\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\" content={profile.displayName}></Header>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Following\" value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider>\r\n            <FollowButton profile={profile} />\r\n          </Divider>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nexport default observer(function ProfilePage() {\r\n  const { username } = useParams<{ username: string }>();\r\n  const { profileStore } = useStore();\r\n  const { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(username);\r\n    return () => {\r\n      setActiveTab(0);\r\n    };\r\n  }, [loadProfile, username, setActiveTab]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content=\"Loading Profile...\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        {profile && (\r\n          <>\r\n            <ProfileHeader profile={profile} />\r\n            <ProfileContent profile={profile} />\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import {\r\n  Redirect,\r\n  Route,\r\n  RouteComponentProps,\r\n  RouteProps,\r\n} from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n  component:\r\n    | React.ComponentType<RouteComponentProps<any>>\r\n    | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n  const {\r\n    userStore: { isLoggedIn },\r\n  } = useStore();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import { Container } from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport { observer } from \"mobx-react-lite\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport TestErrors from \"../../features/errors/TestError\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport { useStore } from \"../stores/store\";\nimport { useEffect } from \"react\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded)\n    return <LoadingComponent content=\"Loadin App...\" />;\n\n  return (\n    <>\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n      <ModalContainer />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path=\"/(.+)\"\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                <PrivateRoute\n                  exact\n                  path=\"/activities\"\n                  component={ActivityDashboard}\n                />\n                <PrivateRoute\n                  path=\"/activities/:id\"\n                  component={ActivityDetails}\n                />\n                <PrivateRoute\n                  key={location.key}\n                  path={[\"/createActivity\", \"/manage/:id\"]}\n                  component={ActivityForm}\n                />\n                <PrivateRoute\n                  path=\"/profiles/:username\"\n                  component={ProfilePage}\n                />\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\n                <Route path=\"/server-error\" component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import ReactDOM from \"react-dom\";\nimport \"./app/layout/styles.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}